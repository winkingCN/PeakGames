using System;

public class COCECKPDIKC : LNKPCJLANAO
{
	private readonly KLKJHFKJLEM ADLMOHOLCGL;

	private readonly LNKPCJLANAO IJJHBEECMBP;

	public virtual KLKJHFKJLEM GOFDFGBGLFC
	{
		get
		{
			return ADLMOHOLCGL;
		}
	}

	[Obsolete("Use 'Algorithm' property instead")]
	public virtual KLKJHFKJLEM JOFEDBJFPBG
	{
		get
		{
			return ADLMOHOLCGL;
		}
	}

	public virtual LNKPCJLANAO KPJHHAAOFOH
	{
		get
		{
			return IJJHBEECMBP;
		}
	}

	public COCECKPDIKC(KLKJHFKJLEM ADLMOHOLCGL)
	{
		this.ADLMOHOLCGL = ADLMOHOLCGL;
	}

	[Obsolete("Use version taking a DerObjectIdentifier")]
	public COCECKPDIKC(string ADLMOHOLCGL)
	{
		this.ADLMOHOLCGL = new KLKJHFKJLEM(ADLMOHOLCGL);
	}

	public COCECKPDIKC(KLKJHFKJLEM ADLMOHOLCGL, LNKPCJLANAO IJJHBEECMBP)
	{
		this.ADLMOHOLCGL = ADLMOHOLCGL;
		this.IJJHBEECMBP = IJJHBEECMBP;
	}

	internal COCECKPDIKC(ALLINHNNNJN MIABODPHOIP)
	{
		if (MIABODPHOIP.GMCGMPEEHJP < 1 || MIABODPHOIP.GMCGMPEEHJP > 2)
		{
			throw new ArgumentException("Bad sequence size: " + MIABODPHOIP.GMCGMPEEHJP);
		}
		ADLMOHOLCGL = KLKJHFKJLEM.BJLJCGFMFOO(MIABODPHOIP.ECNCPJGHBIG(0));
		IJJHBEECMBP = ((MIABODPHOIP.GMCGMPEEHJP >= 2) ? MIABODPHOIP.ECNCPJGHBIG(1) : null);
	}

	public static COCECKPDIKC BJLJCGFMFOO(PAANMJLACEF NEMEKIOEOLC, bool DHGLJHFEJFL)
	{
		return BJLJCGFMFOO(ALLINHNNNJN.BJLJCGFMFOO(NEMEKIOEOLC, DHGLJHFEJFL));
	}

	public static COCECKPDIKC BJLJCGFMFOO(object NEMEKIOEOLC)
	{
		if (NEMEKIOEOLC == null)
		{
			return null;
		}
		if (NEMEKIOEOLC is COCECKPDIKC)
		{
			return (COCECKPDIKC)NEMEKIOEOLC;
		}
		return new COCECKPDIKC(ALLINHNNNJN.BJLJCGFMFOO(NEMEKIOEOLC));
	}

	public override EDOEBJJFOBM IIHKEACDNID()
	{
		DLDBGGDLOOO dLDBGGDLOOO = new DLDBGGDLOOO(ADLMOHOLCGL);
		dLDBGGDLOOO.GCJCILJMBJF(IJJHBEECMBP);
		return new KOGPLMALOEH(dLDBGGDLOOO);
	}
}
