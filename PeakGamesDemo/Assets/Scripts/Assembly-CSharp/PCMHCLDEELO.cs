using System;

public class PCMHCLDEELO : PHFBFDEAHMD
{
	private byte[] LGMMFPHDIMH;

	private byte[] ADLEJDAAOND;

	private int MNIGMJPFNDA;

	private MELAHCOFCEJ IEDPBFAFGGJ;

	private ELGNLPAGPNI HFHKPBBFDFD;

	private int DLFPGGOCGNE;

	public string KFKMEPMEBND
	{
		get
		{
			return IEDPBFAFGGJ.KFKMEPMEBND;
		}
	}

	public PCMHCLDEELO(JMPFLJGHAIM IEDPBFAFGGJ)
		: this(IEDPBFAFGGJ, 8, IEDPBFAFGGJ.BDIGGHEPIIP() * 8 / 2, null)
	{
	}

	public PCMHCLDEELO(JMPFLJGHAIM IEDPBFAFGGJ, ELGNLPAGPNI HFHKPBBFDFD)
		: this(IEDPBFAFGGJ, 8, IEDPBFAFGGJ.BDIGGHEPIIP() * 8 / 2, HFHKPBBFDFD)
	{
	}

	public PCMHCLDEELO(JMPFLJGHAIM IEDPBFAFGGJ, int MAGIDMIBMPC, int DOPHJMLEJPG)
		: this(IEDPBFAFGGJ, MAGIDMIBMPC, DOPHJMLEJPG, null)
	{
	}

	public PCMHCLDEELO(JMPFLJGHAIM IEDPBFAFGGJ, int MAGIDMIBMPC, int DOPHJMLEJPG, ELGNLPAGPNI HFHKPBBFDFD)
	{
		if (DOPHJMLEJPG % 8 != 0)
		{
			throw new ArgumentException("MAC size must be multiple of 8");
		}
		LGMMFPHDIMH = new byte[IEDPBFAFGGJ.BDIGGHEPIIP()];
		this.IEDPBFAFGGJ = new MELAHCOFCEJ(IEDPBFAFGGJ, MAGIDMIBMPC);
		this.HFHKPBBFDFD = HFHKPBBFDFD;
		DLFPGGOCGNE = DOPHJMLEJPG / 8;
		ADLEJDAAOND = new byte[this.IEDPBFAFGGJ.BDIGGHEPIIP()];
		MNIGMJPFNDA = 0;
	}

	public void DIOELAHNLKJ(IGMAJHKIIPK IJJHBEECMBP)
	{
		OMOKOKFNBKI();
		IEDPBFAFGGJ.DIOELAHNLKJ(true, IJJHBEECMBP);
	}

	public int BKGLOJPPBIG()
	{
		return DLFPGGOCGNE;
	}

	public void BPAJGOINFNL(byte MOPCLEEGDFB)
	{
		if (MNIGMJPFNDA == ADLEJDAAOND.Length)
		{
			IEDPBFAFGGJ.DPACJDFHLKB(ADLEJDAAOND, 0, LGMMFPHDIMH, 0);
			MNIGMJPFNDA = 0;
		}
		ADLEJDAAOND[MNIGMJPFNDA++] = MOPCLEEGDFB;
	}

	public void GONEEEFEDGF(byte[] MOPCLEEGDFB, int ELICNEDIBGB, int NBEDPKHALCN)
	{
		if (NBEDPKHALCN < 0)
		{
			throw new ArgumentException("Can't have a negative input length!");
		}
		int num = IEDPBFAFGGJ.BDIGGHEPIIP();
		int num2 = 0;
		int num3 = num - MNIGMJPFNDA;
		if (NBEDPKHALCN > num3)
		{
			Array.Copy(MOPCLEEGDFB, ELICNEDIBGB, ADLEJDAAOND, MNIGMJPFNDA, num3);
			num2 += IEDPBFAFGGJ.DPACJDFHLKB(ADLEJDAAOND, 0, LGMMFPHDIMH, 0);
			MNIGMJPFNDA = 0;
			NBEDPKHALCN -= num3;
			ELICNEDIBGB += num3;
			while (NBEDPKHALCN > num)
			{
				num2 += IEDPBFAFGGJ.DPACJDFHLKB(MOPCLEEGDFB, ELICNEDIBGB, LGMMFPHDIMH, 0);
				NBEDPKHALCN -= num;
				ELICNEDIBGB += num;
			}
		}
		Array.Copy(MOPCLEEGDFB, ELICNEDIBGB, ADLEJDAAOND, MNIGMJPFNDA, NBEDPKHALCN);
		MNIGMJPFNDA += NBEDPKHALCN;
	}

	public int LCNOFBMOHHM(byte[] BILGCJNPJGJ, int EMAKNGBIFDC)
	{
		int num = IEDPBFAFGGJ.BDIGGHEPIIP();
		if (HFHKPBBFDFD == null)
		{
			while (MNIGMJPFNDA < num)
			{
				ADLEJDAAOND[MNIGMJPFNDA++] = 0;
			}
		}
		else
		{
			HFHKPBBFDFD.MDNFIGPPOFC(ADLEJDAAOND, MNIGMJPFNDA);
		}
		IEDPBFAFGGJ.DPACJDFHLKB(ADLEJDAAOND, 0, LGMMFPHDIMH, 0);
		IEDPBFAFGGJ.KMAGMBHGHBL(LGMMFPHDIMH);
		Array.Copy(LGMMFPHDIMH, 0, BILGCJNPJGJ, EMAKNGBIFDC, DLFPGGOCGNE);
		OMOKOKFNBKI();
		return DLFPGGOCGNE;
	}

	public void OMOKOKFNBKI()
	{
		Array.Clear(ADLEJDAAOND, 0, ADLEJDAAOND.Length);
		MNIGMJPFNDA = 0;
		IEDPBFAFGGJ.OMOKOKFNBKI();
	}
}
